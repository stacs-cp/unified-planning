; generated by prob2pddl.py 10x5-ps1-b11.prob
; ###########
; #RBP     R#
; ####     ##
;    ###P#B# 
;     ###### 
; R:2 B:2 P:2 blocks:6 spaces:19
(define (problem puzznic24)
(:domain puzznic)

    (:objects
        red - pattern
        orange - pattern
        yellow - pattern
        green - pattern
        blue - pattern
        violet - pattern
        pink - pattern
        coal - pattern
        lightblue - pattern
        loc_1_1 - location
        loc_2_1 - location
        loc_3_1 - location
        loc_4_1 - location
        loc_5_1 - location
        loc_6_1 - location
        loc_7_1 - location
        loc_8_1 - location
        loc_9_1 - location
        loc_10_1 - location
        loc_11_1 - location
        loc_1_2 - location
        loc_2_2 - location
        loc_3_2 - location
        loc_4_2 - location
        loc_5_2 - location
        loc_6_2 - location
        loc_7_2 - location
        loc_8_2 - location
        loc_9_2 - location
        loc_10_2 - location
        loc_11_2 - location
        loc_1_3 - location
        loc_2_3 - location
        loc_3_3 - location
        loc_4_3 - location
        loc_5_3 - location
        loc_6_3 - location
        loc_7_3 - location
        loc_8_3 - location
        loc_9_3 - location
        loc_10_3 - location
        loc_11_3 - location
        loc_1_4 - location
        loc_2_4 - location
        loc_3_4 - location
        loc_4_4 - location
        loc_5_4 - location
        loc_6_4 - location
        loc_7_4 - location
        loc_8_4 - location
        loc_9_4 - location
        loc_10_4 - location
        loc_11_4 - location
        loc_1_5 - location
        loc_2_5 - location
        loc_3_5 - location
        loc_4_5 - location
        loc_5_5 - location
        loc_6_5 - location
        loc_7_5 - location
        loc_8_5 - location
        loc_9_5 - location
        loc_10_5 - location
        loc_11_5 - location
)
    (:init
        (= (total-cost) 0)
        (next loc_1_1 loc_2_1 right)
        (next loc_1_1 loc_1_2 up)
        (next loc_2_1 loc_1_1 left)
        (next loc_2_1 loc_3_1 right)
        (next loc_2_1 loc_2_2 up)
        (next loc_3_1 loc_2_1 left)
        (next loc_3_1 loc_4_1 right)
        (next loc_3_1 loc_3_2 up)
        (next loc_4_1 loc_3_1 left)
        (next loc_11_1 loc_11_2 up)
        (next loc_1_2 loc_2_2 right)
        (next loc_1_2 loc_1_1 down)
        (next loc_2_2 loc_1_2 left)
        (next loc_2_2 loc_3_2 right)
        (next loc_2_2 loc_2_1 down)
        (next loc_3_2 loc_2_2 left)
        (next loc_3_2 loc_3_1 down)
        (next loc_7_2 loc_7_3 up)
        (next loc_9_2 loc_9_3 up)
        (next loc_11_2 loc_11_1 down)
        (next loc_5_3 loc_6_3 right)
        (next loc_5_3 loc_5_4 up)
        (next loc_6_3 loc_5_3 left)
        (next loc_6_3 loc_7_3 right)
        (next loc_6_3 loc_6_4 up)
        (next loc_7_3 loc_6_3 left)
        (next loc_7_3 loc_8_3 right)
        (next loc_7_3 loc_7_4 up)
        (next loc_7_3 loc_7_2 down)
        (next loc_8_3 loc_7_3 left)
        (next loc_8_3 loc_9_3 right)
        (next loc_8_3 loc_8_4 up)
        (next loc_9_3 loc_8_3 left)
        (next loc_9_3 loc_9_4 up)
        (next loc_9_3 loc_9_2 down)
        (next loc_2_4 loc_3_4 right)
        (next loc_3_4 loc_2_4 left)
        (next loc_3_4 loc_4_4 right)
        (next loc_4_4 loc_3_4 left)
        (next loc_4_4 loc_5_4 right)
        (next loc_5_4 loc_4_4 left)
        (next loc_5_4 loc_6_4 right)
        (next loc_5_4 loc_5_3 down)
        (next loc_6_4 loc_5_4 left)
        (next loc_6_4 loc_7_4 right)
        (next loc_6_4 loc_6_3 down)
        (next loc_7_4 loc_6_4 left)
        (next loc_7_4 loc_8_4 right)
        (next loc_7_4 loc_7_3 down)
        (next loc_8_4 loc_7_4 left)
        (next loc_8_4 loc_9_4 right)
        (next loc_8_4 loc_8_3 down)
        (next loc_9_4 loc_8_4 left)
        (next loc_9_4 loc_10_4 right)
        (next loc_9_4 loc_9_3 down)
        (next loc_10_4 loc_9_4 left)
        (patterned loc_7_2 pink)
        (patterned loc_9_2 blue)
        (patterned loc_2_4 red)
        (patterned loc_3_4 blue)
        (patterned loc_4_4 pink)
        (patterned loc_10_4 red)
    )

    (:goal
        (forall (?l - location)
            (not (exists (?p - pattern)
                (patterned ?l ?p)))))

    (:metric minimize (total-cost))
)
