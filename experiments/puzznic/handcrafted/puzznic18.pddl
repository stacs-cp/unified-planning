; generated by prob2pddl.py 8x12-ps1-e22.prob
;     ####
;     #  #
;     #  #
;     #O #
;     #L #
;     #B #
;   ###PG#
;   #  RP#
; ### #CG#
; #O  BRC#
; #YGLGBY#
; ########
; G:4 B:3 R:2 O:2 Y:2 P:2 C:2 L:2 blocks:19 spaces:40
(define (problem puzznic18)
(:domain puzznic)

    (:objects
        red - pattern
        orange - pattern
        yellow - pattern
        green - pattern
        blue - pattern
        violet - pattern
        pink - pattern
        coal - pattern
        lightblue - pattern
        loc_1_1 - location
        loc_2_1 - location
        loc_3_1 - location
        loc_4_1 - location
        loc_5_1 - location
        loc_6_1 - location
        loc_7_1 - location
        loc_8_1 - location
        loc_1_2 - location
        loc_2_2 - location
        loc_3_2 - location
        loc_4_2 - location
        loc_5_2 - location
        loc_6_2 - location
        loc_7_2 - location
        loc_8_2 - location
        loc_1_3 - location
        loc_2_3 - location
        loc_3_3 - location
        loc_4_3 - location
        loc_5_3 - location
        loc_6_3 - location
        loc_7_3 - location
        loc_8_3 - location
        loc_1_4 - location
        loc_2_4 - location
        loc_3_4 - location
        loc_4_4 - location
        loc_5_4 - location
        loc_6_4 - location
        loc_7_4 - location
        loc_8_4 - location
        loc_1_5 - location
        loc_2_5 - location
        loc_3_5 - location
        loc_4_5 - location
        loc_5_5 - location
        loc_6_5 - location
        loc_7_5 - location
        loc_8_5 - location
        loc_1_6 - location
        loc_2_6 - location
        loc_3_6 - location
        loc_4_6 - location
        loc_5_6 - location
        loc_6_6 - location
        loc_7_6 - location
        loc_8_6 - location
        loc_1_7 - location
        loc_2_7 - location
        loc_3_7 - location
        loc_4_7 - location
        loc_5_7 - location
        loc_6_7 - location
        loc_7_7 - location
        loc_8_7 - location
        loc_1_8 - location
        loc_2_8 - location
        loc_3_8 - location
        loc_4_8 - location
        loc_5_8 - location
        loc_6_8 - location
        loc_7_8 - location
        loc_8_8 - location
        loc_1_9 - location
        loc_2_9 - location
        loc_3_9 - location
        loc_4_9 - location
        loc_5_9 - location
        loc_6_9 - location
        loc_7_9 - location
        loc_8_9 - location
        loc_1_10 - location
        loc_2_10 - location
        loc_3_10 - location
        loc_4_10 - location
        loc_5_10 - location
        loc_6_10 - location
        loc_7_10 - location
        loc_8_10 - location
        loc_1_11 - location
        loc_2_11 - location
        loc_3_11 - location
        loc_4_11 - location
        loc_5_11 - location
        loc_6_11 - location
        loc_7_11 - location
        loc_8_11 - location
        loc_1_12 - location
        loc_2_12 - location
        loc_3_12 - location
        loc_4_12 - location
        loc_5_12 - location
        loc_6_12 - location
        loc_7_12 - location
        loc_8_12 - location
)
    (:init
        (= (total-cost) 0)
        (next loc_2_2 loc_3_2 right)
        (next loc_2_2 loc_2_3 up)
        (next loc_3_2 loc_2_2 left)
        (next loc_3_2 loc_4_2 right)
        (next loc_3_2 loc_3_3 up)
        (next loc_4_2 loc_3_2 left)
        (next loc_4_2 loc_5_2 right)
        (next loc_4_2 loc_4_3 up)
        (next loc_5_2 loc_4_2 left)
        (next loc_5_2 loc_6_2 right)
        (next loc_5_2 loc_5_3 up)
        (next loc_6_2 loc_5_2 left)
        (next loc_6_2 loc_7_2 right)
        (next loc_6_2 loc_6_3 up)
        (next loc_7_2 loc_6_2 left)
        (next loc_7_2 loc_7_3 up)
        (next loc_2_3 loc_3_3 right)
        (next loc_2_3 loc_2_2 down)
        (next loc_3_3 loc_2_3 left)
        (next loc_3_3 loc_4_3 right)
        (next loc_3_3 loc_3_2 down)
        (next loc_4_3 loc_3_3 left)
        (next loc_4_3 loc_5_3 right)
        (next loc_4_3 loc_4_4 up)
        (next loc_4_3 loc_4_2 down)
        (next loc_5_3 loc_4_3 left)
        (next loc_5_3 loc_6_3 right)
        (next loc_5_3 loc_5_2 down)
        (next loc_6_3 loc_5_3 left)
        (next loc_6_3 loc_7_3 right)
        (next loc_6_3 loc_6_4 up)
        (next loc_6_3 loc_6_2 down)
        (next loc_7_3 loc_6_3 left)
        (next loc_7_3 loc_7_4 up)
        (next loc_7_3 loc_7_2 down)
        (next loc_4_4 loc_4_5 up)
        (next loc_4_4 loc_4_3 down)
        (next loc_6_4 loc_7_4 right)
        (next loc_6_4 loc_6_5 up)
        (next loc_6_4 loc_6_3 down)
        (next loc_7_4 loc_6_4 left)
        (next loc_7_4 loc_7_5 up)
        (next loc_7_4 loc_7_3 down)
        (next loc_1_5 loc_2_5 right)
        (next loc_1_5 loc_1_6 up)
        (next loc_2_5 loc_1_5 left)
        (next loc_2_5 loc_2_6 up)
        (next loc_4_5 loc_5_5 right)
        (next loc_4_5 loc_4_4 down)
        (next loc_5_5 loc_4_5 left)
        (next loc_5_5 loc_6_5 right)
        (next loc_6_5 loc_5_5 left)
        (next loc_6_5 loc_7_5 right)
        (next loc_6_5 loc_6_6 up)
        (next loc_6_5 loc_6_4 down)
        (next loc_7_5 loc_6_5 left)
        (next loc_7_5 loc_7_6 up)
        (next loc_7_5 loc_7_4 down)
        (next loc_1_6 loc_2_6 right)
        (next loc_1_6 loc_1_7 up)
        (next loc_1_6 loc_1_5 down)
        (next loc_2_6 loc_1_6 left)
        (next loc_2_6 loc_2_7 up)
        (next loc_2_6 loc_2_5 down)
        (next loc_6_6 loc_7_6 right)
        (next loc_6_6 loc_6_7 up)
        (next loc_6_6 loc_6_5 down)
        (next loc_7_6 loc_6_6 left)
        (next loc_7_6 loc_7_7 up)
        (next loc_7_6 loc_7_5 down)
        (next loc_1_7 loc_2_7 right)
        (next loc_1_7 loc_1_8 up)
        (next loc_1_7 loc_1_6 down)
        (next loc_2_7 loc_1_7 left)
        (next loc_2_7 loc_3_7 right)
        (next loc_2_7 loc_2_8 up)
        (next loc_2_7 loc_2_6 down)
        (next loc_3_7 loc_2_7 left)
        (next loc_3_7 loc_4_7 right)
        (next loc_3_7 loc_3_8 up)
        (next loc_4_7 loc_3_7 left)
        (next loc_4_7 loc_4_8 up)
        (next loc_6_7 loc_7_7 right)
        (next loc_6_7 loc_6_8 up)
        (next loc_6_7 loc_6_6 down)
        (next loc_7_7 loc_6_7 left)
        (next loc_7_7 loc_7_8 up)
        (next loc_7_7 loc_7_6 down)
        (next loc_1_8 loc_2_8 right)
        (next loc_1_8 loc_1_9 up)
        (next loc_1_8 loc_1_7 down)
        (next loc_2_8 loc_1_8 left)
        (next loc_2_8 loc_3_8 right)
        (next loc_2_8 loc_2_9 up)
        (next loc_2_8 loc_2_7 down)
        (next loc_3_8 loc_2_8 left)
        (next loc_3_8 loc_4_8 right)
        (next loc_3_8 loc_3_9 up)
        (next loc_3_8 loc_3_7 down)
        (next loc_4_8 loc_3_8 left)
        (next loc_4_8 loc_4_9 up)
        (next loc_4_8 loc_4_7 down)
        (next loc_6_8 loc_7_8 right)
        (next loc_6_8 loc_6_9 up)
        (next loc_6_8 loc_6_7 down)
        (next loc_7_8 loc_6_8 left)
        (next loc_7_8 loc_7_9 up)
        (next loc_7_8 loc_7_7 down)
        (next loc_1_9 loc_2_9 right)
        (next loc_1_9 loc_1_10 up)
        (next loc_1_9 loc_1_8 down)
        (next loc_2_9 loc_1_9 left)
        (next loc_2_9 loc_3_9 right)
        (next loc_2_9 loc_2_10 up)
        (next loc_2_9 loc_2_8 down)
        (next loc_3_9 loc_2_9 left)
        (next loc_3_9 loc_4_9 right)
        (next loc_3_9 loc_3_10 up)
        (next loc_3_9 loc_3_8 down)
        (next loc_4_9 loc_3_9 left)
        (next loc_4_9 loc_4_10 up)
        (next loc_4_9 loc_4_8 down)
        (next loc_6_9 loc_7_9 right)
        (next loc_6_9 loc_6_10 up)
        (next loc_6_9 loc_6_8 down)
        (next loc_7_9 loc_6_9 left)
        (next loc_7_9 loc_7_10 up)
        (next loc_7_9 loc_7_8 down)
        (next loc_1_10 loc_2_10 right)
        (next loc_1_10 loc_1_11 up)
        (next loc_1_10 loc_1_9 down)
        (next loc_2_10 loc_1_10 left)
        (next loc_2_10 loc_3_10 right)
        (next loc_2_10 loc_2_11 up)
        (next loc_2_10 loc_2_9 down)
        (next loc_3_10 loc_2_10 left)
        (next loc_3_10 loc_4_10 right)
        (next loc_3_10 loc_3_11 up)
        (next loc_3_10 loc_3_9 down)
        (next loc_4_10 loc_3_10 left)
        (next loc_4_10 loc_4_11 up)
        (next loc_4_10 loc_4_9 down)
        (next loc_6_10 loc_7_10 right)
        (next loc_6_10 loc_6_11 up)
        (next loc_6_10 loc_6_9 down)
        (next loc_7_10 loc_6_10 left)
        (next loc_7_10 loc_7_11 up)
        (next loc_7_10 loc_7_9 down)
        (next loc_1_11 loc_2_11 right)
        (next loc_1_11 loc_1_12 up)
        (next loc_1_11 loc_1_10 down)
        (next loc_2_11 loc_1_11 left)
        (next loc_2_11 loc_3_11 right)
        (next loc_2_11 loc_2_12 up)
        (next loc_2_11 loc_2_10 down)
        (next loc_3_11 loc_2_11 left)
        (next loc_3_11 loc_4_11 right)
        (next loc_3_11 loc_3_12 up)
        (next loc_3_11 loc_3_10 down)
        (next loc_4_11 loc_3_11 left)
        (next loc_4_11 loc_4_12 up)
        (next loc_4_11 loc_4_10 down)
        (next loc_6_11 loc_7_11 right)
        (next loc_6_11 loc_6_10 down)
        (next loc_7_11 loc_6_11 left)
        (next loc_7_11 loc_7_10 down)
        (next loc_1_12 loc_2_12 right)
        (next loc_1_12 loc_1_11 down)
        (next loc_2_12 loc_1_12 left)
        (next loc_2_12 loc_3_12 right)
        (next loc_2_12 loc_2_11 down)
        (next loc_3_12 loc_2_12 left)
        (next loc_3_12 loc_4_12 right)
        (next loc_3_12 loc_3_11 down)
        (next loc_4_12 loc_3_12 left)
        (next loc_4_12 loc_4_11 down)
        (patterned loc_2_2 yellow)
        (patterned loc_3_2 green)
        (patterned loc_4_2 lightblue)
        (patterned loc_5_2 green)
        (patterned loc_6_2 blue)
        (patterned loc_7_2 yellow)
        (patterned loc_2_3 orange)
        (patterned loc_5_3 blue)
        (patterned loc_6_3 red)
        (patterned loc_7_3 coal)
        (patterned loc_6_4 coal)
        (patterned loc_7_4 green)
        (patterned loc_6_5 red)
        (patterned loc_7_5 pink)
        (patterned loc_6_6 pink)
        (patterned loc_7_6 green)
        (patterned loc_6_7 blue)
        (patterned loc_6_8 lightblue)
        (patterned loc_6_9 orange)
    )

    (:goal
        (forall (?l - location)
            (not (exists (?p - pattern)
                (patterned ?l ?p)))))

    (:metric minimize (total-cost))
)
