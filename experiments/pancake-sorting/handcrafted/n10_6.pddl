(define (problem n10_6)
    (:domain pancake-sorting)
    (:objects
        p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 - position
        t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 - tile
    )
    (:init
        (= (total-cost) 0)
        (at t6 p1)
        (at t4 p2)
        (at t3 p3)
        (at t10 p4)
        (at t5 p5)
        (at t9 p6)
        (at t7 p7)
        (at t2 p8)
        (at t1 p9)
        (at t8 p10)
        (flipat p2 p1 p2)
        (flipat p2 p2 p1)
        (flipat p3 p1 p3)
        (flipat p3 p2 p2)
        (flipat p3 p3 p1)
        (flipat p4 p1 p4)
        (flipat p4 p2 p3)
        (flipat p4 p3 p2)
        (flipat p4 p4 p1)
        (flipat p5 p1 p5)
        (flipat p5 p2 p4)
        (flipat p5 p3 p3)
        (flipat p5 p4 p2)
        (flipat p5 p5 p1)
        (flipat p6 p1 p6)
        (flipat p6 p2 p5)
        (flipat p6 p3 p4)
        (flipat p6 p4 p3)
        (flipat p6 p5 p2)
        (flipat p6 p6 p1)
        (flipat p7 p1 p7)
        (flipat p7 p2 p6)
        (flipat p7 p3 p5)
        (flipat p7 p4 p4)
        (flipat p7 p5 p3)
        (flipat p7 p6 p2)
        (flipat p7 p7 p1)
        (flipat p8 p1 p8)
        (flipat p8 p2 p7)
        (flipat p8 p3 p6)
        (flipat p8 p4 p5)
        (flipat p8 p5 p4)
        (flipat p8 p6 p3)
        (flipat p8 p7 p2)
        (flipat p8 p8 p1)
        (flipat p9 p1 p9)
        (flipat p9 p2 p8)
        (flipat p9 p3 p7)
        (flipat p9 p4 p6)
        (flipat p9 p5 p5)
        (flipat p9 p6 p4)
        (flipat p9 p7 p3)
        (flipat p9 p8 p2)
        (flipat p9 p9 p1)
        (flipat p10 p1 p10)
        (flipat p10 p2 p9)
        (flipat p10 p3 p8)
        (flipat p10 p4 p7)
        (flipat p10 p5 p6)
        (flipat p10 p6 p5)
        (flipat p10 p7 p4)
        (flipat p10 p8 p3)
        (flipat p10 p9 p2)
        (flipat p10 p10 p1)
        (lte p1 p1)
        (lte p1 p2)
        (lte p1 p3)
        (lte p1 p4)
        (lte p1 p5)
        (lte p1 p6)
        (lte p1 p7)
        (lte p1 p8)
        (lte p1 p9)
        (lte p1 p10)
        (lte p2 p2)
        (lte p2 p3)
        (lte p2 p4)
        (lte p2 p5)
        (lte p2 p6)
        (lte p2 p7)
        (lte p2 p8)
        (lte p2 p9)
        (lte p2 p10)
        (lte p3 p3)
        (lte p3 p4)
        (lte p3 p5)
        (lte p3 p6)
        (lte p3 p7)
        (lte p3 p8)
        (lte p3 p9)
        (lte p3 p10)
        (lte p4 p4)
        (lte p4 p5)
        (lte p4 p6)
        (lte p4 p7)
        (lte p4 p8)
        (lte p4 p9)
        (lte p4 p10)
        (lte p5 p5)
        (lte p5 p6)
        (lte p5 p7)
        (lte p5 p8)
        (lte p5 p9)
        (lte p5 p10)
        (lte p6 p6)
        (lte p6 p7)
        (lte p6 p8)
        (lte p6 p9)
        (lte p6 p10)
        (lte p7 p7)
        (lte p7 p8)
        (lte p7 p9)
        (lte p7 p10)
        (lte p8 p8)
        (lte p8 p9)
        (lte p8 p10)
        (lte p9 p9)
        (lte p9 p10)
        (lte p10 p10)
    )
    (:goal (and
        (at t1 p1)
        (at t2 p2)
        (at t3 p3)
        (at t4 p4)
        (at t5 p5)
        (at t6 p6)
        (at t7 p7)
        (at t8 p8)
        (at t9 p9)
        (at t10 p10)
    ))
    (:metric minimize (total-cost))
)